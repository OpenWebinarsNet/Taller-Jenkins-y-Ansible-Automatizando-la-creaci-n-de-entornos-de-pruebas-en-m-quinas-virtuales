---
# playbook-packer-jenkins-c-lang.yml
- name: Aprovisionando la imagen
  hosts: localhost
  become: true
  vars:
    gcp_project: just-landing-347305
    gcp_cred_kind: serviceaccount
    gcp_region: europe-west3
    gcp_zone: europe-west3-b

  tasks:
  - name: Disco de arranque
    google.cloud.gcp_compute_disk:
      name: "{{ instance_name }}-disk"
      size_gb: 20
      source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts
      zone: "{{ gcp_zone }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: disk
  - name: Red por defecto
    google.cloud.gcp_compute_network:
      name: default
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: network
  - name: Dirección IP externa
    google.cloud.gcp_compute_address:
      name: "{{ instance_name }}-address"
      region: "{{ gcp_region }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: address
  - name: Crea la instancia de la máquina virtual
    google.cloud.gcp_compute_instance:
      name: "{{ instance_name }}"
      machine_type: n1-standard-1
      disks:
      - auto_delete: 'true'
        boot: 'true'
        source: "{{ disk }}"
      network_interfaces:
      - network: "{{ network }}"
        access_configs:
        - name: External NAT
          nat_ip: "{{ address }}"
          type: ONE_TO_ONE_NAT
      zone: "{{ gcp_zone }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: instance

  - name: Esperar servicio SSH activo
    wait_for: host={{ address.address }} port=22 delay=10 timeout=60

  - name: Add host to groupname
    add_host: 
      hostname: "{{ address.address }}"
      groups:
        - just_created

- name: "Configura host"
  hosts: just_created
  connection: ssh
  user: super
  become: True
  tasks:
  # PARTE I: antes de crear la aplicación
  - name: Ejecutar apt upgrade
    ansible.builtin.apt:
      upgrade: yes
  - name: Desinstalar paquetes antiguos
    ansible.builtin.apt:
      name:
        - docker
        - docker-engine
        - docker.io
        - containerd
        - runc
      state: absent
  - name: Instala dependencias
    ansible.builtin.apt:
      name:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
      state: present

  - name: Elimina clave gpg antes de descargarla
    ansible.builtin.file:
      path: /usr/share/keyrings/docker-archive-keyring.gpg
      state: absent

  - name: Añade clave gpg del repositorio de Docker
    ansible.builtin.shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

  - name: Añade repositorio de docker
    ansible.builtin.apt_repository:
      repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable
      state: present
  - name: Instala docker
    ansible.builtin.apt:
      update_cache: true
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io

  - name: Añade el usuario super al grupo docker
    ansible.builtin.user:
      name: super
      groups: docker
      append: yes
  - name: Crea la carpeta $HOME/.docker
    ansible.builtin.file:
      path: /home/super/.docker
      state: directory
      owner: super
      group: super
      mode: '0755'

  - name: Crea la carpeta $HOME/.docker/cli-plugins
    ansible.builtin.file:
      path: /home/super/.docker/cli-plugins
      state: directory
      owner: super
      group: super
      mode: '0755'
  - name: Descarga el plugin
    ansible.builtin.get_url:
      url: https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-linux-x86_64
      dest: /home/super/.docker/cli-plugins/docker-compose
      owner: super
      group: super
      mode: '0744'

  # PARTE 2: después de crear la aplicación
  - name: Obtiene el repositorio
    ansible.builtin.git:
      repo: 'https://github.com/alfonsoalba-cursos/taller-openwebinars.git'
      dest: /home/super/taller-openwebinars
      version: master
  - name: Instala pip3
    ansible.builtin.apt:
      name:
        - python3-pip
      state: present
      update_cache: true
  - name: Instala modulo docker
    ansible.builtin.pip:
      name:
        - docker
        - docker-compose
      state: present
  - name: Levanta los servicios usando docker compose
    community.docker.docker_compose:
      project_src: /home/super/taller-openwebinars/app
      files:
        - compose.yaml
      state: present
      services:
        - rails
        - postgres
        - redis
      build: yes